import telebot
from telebot import types
import random
from random import choice
import time
from dotenv import load_dotenv
import os
load_dotenv()

TOKEN = os.getenv('TOKEN')
bot = TOKEN

@bot.message_handler(commands=['start']) #—Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–£—á–∏–º —Å–ª–æ–≤–∞ HSK")
    btn2 = types.KeyboardButton("–ü—Ä–∏–º–µ—Ä—ã")
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id,
'''–ü—Ä–∏–≤–µ—Ç!
    
–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ üá®üá≥

–í–º–µ—Å—Ç–µ –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º—Å—è –∫ —ç–∫–∑–∞–º–µ–Ω—É HSK: –æ—Å–≤–æ–∏–º –±–∞–∑–æ–≤—É—é –ª–µ–∫—Å–∏–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è –∏ –∑–∞–∫—Ä–µ–ø–∏–º –ø—Ä–∏–º–µ—Ä–∞–º–∏ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–ª–æ–≤

–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º? –ü–æ—É—á–∏–º —Å–ª–æ–≤–∞ –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –ø—Ä–∏–º–µ—Ä—ã —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è?''', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def get_text_messages(message):

    if message.text == 'HSK 1' or message.text == '–ï—â–µ —Å–ª–æ–≤–∞ HSK1':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —É—Ä–æ–≤–Ω—è HSK')
        btn2 = types.KeyboardButton('–ï—â–µ —Å–ª–æ–≤–∞ HSK1')
        btn3 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3)
        with open('HSK1_vocabulary.txt', 'r', encoding='utf-16') as file:
            HSK1_words = file.readlines()
        for i in range(5):
            temp = random.choice(HSK1_words)
            temp = temp[:temp.find(' ')] + '||' + temp[temp.find(' '):] + '||'
            bot.send_message(message.from_user.id, temp, parse_mode="MarkdownV2", reply_markup=markup)

    elif message.text == 'HSK 2' or message.text == '–ï—â–µ —Å–ª–æ–≤–∞ HSK2':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —É—Ä–æ–≤–Ω—è HSK')
        btn2 = types.KeyboardButton('–ï—â–µ —Å–ª–æ–≤–∞ HSK2')
        btn3 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3)
        with open('HSK2_vocabulary.txt', 'r', encoding='utf-16') as file:
            HSK2_words = file.readlines()
        for i in range(5):
            temp = random.choice(HSK2_words)
            temp = temp[:temp.find(' ')] + '||' + temp[temp.find(' '):] + '||'
            bot.send_message(message.from_user.id, temp, parse_mode="MarkdownV2", reply_markup=markup)

    elif message.text == 'HSK 3' or message.text == '–ï—â–µ —Å–ª–æ–≤–∞ HSK3':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —É—Ä–æ–≤–Ω—è HSK')
        btn2 = types.KeyboardButton('–ï—â–µ —Å–ª–æ–≤–∞ HSK3')
        btn3 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3)
        with open('HSK3_vocabulary.txt', 'r', encoding='utf-16') as file:
            HSK3_words = file.readlines()
        for i in range(5):
            temp = random.choice(HSK3_words)
            temp = temp[:temp.find(' ')] + '||' + temp[temp.find(' '):] + '||'
            bot.send_message(message.from_user.id, temp, parse_mode="MarkdownV2", reply_markup=markup)

    elif message.text == 'HSK 4' or message.text == '–ï—â–µ —Å–ª–æ–≤–∞ HSK4':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —É—Ä–æ–≤–Ω—è HSK')
        btn2 = types.KeyboardButton('–ï—â–µ —Å–ª–æ–≤–∞ HSK4')
        btn3 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3)
        with open('HSK4_vocabulary.txt', 'r', encoding='utf-16') as file:
            HSK4_words = file.readlines()
        for i in range(5):
            temp = random.choice(HSK4_words)
            temp = temp[:temp.find(' ')] + '||' + temp[temp.find(' '):] + '||'
            bot.send_message(message.from_user.id, temp, parse_mode="MarkdownV2", reply_markup=markup)

    elif message.text == 'HSK 5' or message.text == '–ï—â–µ —Å–ª–æ–≤–∞ HSK5':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —É—Ä–æ–≤–Ω—è HSK')
        btn2 = types.KeyboardButton('–ï—â–µ —Å–ª–æ–≤–∞ HSK5')
        btn3 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3)
        with open('HSK5_vocabulary.txt', 'r', encoding='utf-16') as file:
            HSK5_words = file.readlines()
        for i in range(5):
            temp = random.choice(HSK5_words)
            temp = temp[:temp.find(' ')] + '||' + temp[temp.find(' '):] + '||'
            bot.send_message(message.from_user.id, temp, parse_mode="MarkdownV2", reply_markup=markup)

    elif message.text == 'HSK 6' or message.text == '–ï—â–µ —Å–ª–æ–≤–∞ HSK6':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —É—Ä–æ–≤–Ω—è HSK')
        btn2 = types.KeyboardButton('–ï—â–µ —Å–ª–æ–≤–∞ HSK6')
        btn3 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3)
        with open('HSK6_vocabulary.txt', 'r', encoding='utf-16') as file:
            HSK6_words = file.readlines()
        for i in range(5):
            temp = random.choice(HSK6_words)
            temp = temp[:temp.find(' ')] + '||' + temp[temp.find(' '):] + '||'
            bot.send_message(message.from_user.id, temp, parse_mode="MarkdownV2", reply_markup=markup)

    elif message.text == '–ü—Ä–∏–º–µ—Ä—ã':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        btn2 = types.KeyboardButton('–ï—â–µ –ø—Ä–∏–º–µ—Ä—ã')
        markup.add(btn1, btn2)
        bot.send_message(message.from_user.id, "–Ø —Ç—É—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è —Ç–µ–±—è —á—É—Ç—å –±–æ–ª–µ–µ 2000 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–π, –ø–æ–≥–Ω–∞–ª–∏!", reply_markup=markup)
        time.sleep(2)
        with open('Examples.txt', 'r', encoding='utf-16') as file:
            examples = file.readlines()
        for i in range(5):
            temp = random.choice(examples)
            temp = temp[:temp.find(' ')] + '||' + temp[temp.find(' '):] + '||'
            bot.send_message(message.from_user.id, temp, parse_mode="MarkdownV2", reply_markup=markup)
    elif message.text == '–ï—â–µ –ø—Ä–∏–º–µ—Ä—ã':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        btn2 = types.KeyboardButton('–ï—â–µ –ø—Ä–∏–º–µ—Ä—ã')
        markup.add(btn1, btn2)
        bot.send_message(message.from_user.id, "–ü—Ä–∏–º–µ—Ä–æ–≤ –º–Ω–æ–≥–æ –Ω–µ –±—ã–≤–∞–µ—Ç üòâ", reply_markup=markup)
        time.sleep(2)
        with open('Examples.txt', 'r', encoding='utf-16') as file:
            examples = file.readlines()
        for i in range(5):
            temp = random.choice(examples)
            temp = temp[:temp.find(' ')] + '||' + temp[temp.find(' '):] + '||'
            bot.send_message(message.from_user.id, temp, parse_mode="MarkdownV2", reply_markup=markup)

    elif message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–£—á–∏–º —Å–ª–æ–≤–∞ HSK")
        btn2 = types.KeyboardButton("–ü—Ä–∏–º–µ—Ä—ã")
        markup.add(btn1, btn2)
        bot.send_message(message.from_user.id, "–ò—Ç–∞–∫, –ø—Ä–æ–¥–æ–ª–∂–∏–º –∏–∑—É—á–µ–Ω–∏–µ —Å–ª–æ–≤ –∏–ª–∏ –ø–µ—Ä–µ–π–¥–µ–º –∫ –ø—Ä–∏–º–µ—Ä–∞–º?", reply_markup=markup)

    elif message.text == '–£—á–∏–º —Å–ª–æ–≤–∞ HSK':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("HSK 1")
        btn2 = types.KeyboardButton("HSK 2")
        btn3 = types.KeyboardButton("HSK 3")
        btn4 = types.KeyboardButton("HSK 4")
        btn5 = types.KeyboardButton("HSK 5")
        btn6 = types.KeyboardButton("HSK 6")
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
        bot.send_message(message.from_user.id, '''–î–∞–≤–∞–π —Å–ø–µ—Ä–≤–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å —É—Ä–æ–≤–Ω–µ–º —ç–∫–∑–∞–º–µ–Ω–∞ HSK. –ù–∞–ø–æ–º–Ω—é, –≤ –º–æ–µ–π –±–∞–∑–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è:
‚úÖ 150 —Å–ª–æ–≤ –¥–ª—è HSK 1
‚úÖ 300 —Å–ª–æ–≤ –¥–ª—è HSK 2
‚úÖ 600 —Å–ª–æ–≤ –¥–ª—è HSK 3
‚úÖ 1200 —Å–ª–æ–≤ –¥–ª—è HSK 4
‚úÖ 2500 —Å–ª–æ–≤ –¥–ª—è HSK 5
‚úÖ 5000 —Å–ª–æ–≤ –¥–ª—è HSK 6''', reply_markup=markup)

    elif message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —É—Ä–æ–≤–Ω—è HSK':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("HSK 1")
        btn2 = types.KeyboardButton("HSK 2")
        btn3 = types.KeyboardButton("HSK 3")
        btn4 = types.KeyboardButton("HSK 4")
        btn5 = types.KeyboardButton("HSK 5")
        btn6 = types.KeyboardButton("HSK 6")
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
        bot.send_message(message.from_user.id, '–û–∫, –≤—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å HSK', reply_markup=markup)

    #small talk
    elif message.text == "–ü—Ä–∏–≤–µ—Ç" or message.text == "–ø—Ä–∏–≤–µ—Ç":
        start(message)
    elif message.text == "/help":
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ –ø—Ä–∏–≤–µ—Ç –∏–ª–∏ /start, –∏ –º—ã –Ω–∞—á–Ω–µ–º –æ–±—É—á–µ–Ω–∏–µ")
    elif message.text == "–ü–æ–∫–∞" or message.text == "–ø–æ–∫–∞":
        bot.send_message(message.from_user.id, "–ó–∞—Ö–æ–¥–∏ –µ—â–µ, 5000 —Å–ª–æ–≤ —Å–∞–º–∏ —Å–µ–±—è –Ω–µ –≤—ã—É—á–∞—Ç!")

bot.polling(none_stop=True, interval=0)
